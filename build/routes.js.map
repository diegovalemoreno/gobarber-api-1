{"version":3,"sources":["../src/routes.js"],"names":["routes","Router","upload","multerConfig","use","swaggerUi","serve","get","setup","swaggerDocument","post","UserController","store","SessionController","authMiddleware","put","update","ProviderController","index","AvailableController","AppointmentController","delete","ScheduleController","NotificationController","single","FileController"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,MAAMA,MAAM,GAAG,IAAIC,eAAJ,EAAf;AACA,MAAMC,MAAM,GAAG,qBAAOC,gBAAP,CAAf;AACAH,MAAM,CAACI,GAAP,CAAW,WAAX,EAAwBC,0BAAUC,KAAlC;AACAN,MAAM,CAACO,GAAP,CAAW,WAAX,EAAwBF,0BAAUG,KAAV,CAAgBC,gBAAhB,CAAxB;AACAT,MAAM,CAACU,IAAP,CAAY,QAAZ,EAAsBC,wBAAeC,KAArC;AACAZ,MAAM,CAACU,IAAP,CAAY,WAAZ,EAAyBG,2BAAkBD,KAA3C,E,CAEA;;AACAZ,MAAM,CAACI,GAAP,CAAWU,aAAX;AACAd,MAAM,CAACe,GAAP,CAAW,QAAX,EAAqBJ,wBAAeK,MAApC;AAEAhB,MAAM,CAACO,GAAP,CAAW,YAAX,EAAyBU,4BAAmBC,KAA5C;AACAlB,MAAM,CAACO,GAAP,CAAW,kCAAX,EAA+CY,6BAAoBD,KAAnE;AAEAlB,MAAM,CAACU,IAAP,CAAY,eAAZ,EAA6BU,+BAAsBR,KAAnD;AACAZ,MAAM,CAACO,GAAP,CAAW,eAAX,EAA4Ba,+BAAsBF,KAAlD;AACAlB,MAAM,CAACqB,MAAP,CAAc,mBAAd,EAAmCD,+BAAsBC,MAAzD;AAEArB,MAAM,CAACO,GAAP,CAAW,WAAX,EAAwBe,4BAAmBJ,KAA3C;AAEAlB,MAAM,CAACO,GAAP,CAAW,gBAAX,EAA6BgB,gCAAuBL,KAApD;AACAlB,MAAM,CAACe,GAAP,CAAW,oBAAX,EAAiCQ,gCAAuBP,MAAxD;AAEAhB,MAAM,CAACU,IAAP,CAAY,QAAZ,EAAsBR,MAAM,CAACsB,MAAP,CAAc,MAAd,CAAtB,EAA6CC,wBAAeb,KAA5D;eAEeZ,M","sourcesContent":["import { Router } from 'express';\nimport multer from 'multer';\nimport swaggerUi from 'swagger-ui-express';\nimport UserController from './app/controllers/UserController';\nimport SessionController from './app/controllers/SessionController';\nimport FileController from './app/controllers/FileController';\nimport ProviderController from './app/controllers/ProviderController';\nimport AppointmentController from './app/controllers/AppointmentController';\nimport AvailableController from './app/controllers/AvailableController';\nimport ScheduleController from './app/controllers/ScheduleController';\nimport NotificationController from './app/controllers/NotificationController';\nimport authMiddleware from './app/middlewares/auth';\nimport multerConfig from './config/multer';\nimport swaggerDocument from './swagger.json';\n\nconst routes = new Router();\nconst upload = multer(multerConfig);\nroutes.use('/api-docs', swaggerUi.serve);\nroutes.get('/api-docs', swaggerUi.setup(swaggerDocument));\nroutes.post('/users', UserController.store);\nroutes.post('/sessions', SessionController.store);\n\n// Todas as rotas que forem chamadas a partir daqui tem que ser autenticada\nroutes.use(authMiddleware);\nroutes.put('/users', UserController.update);\n\nroutes.get('/providers', ProviderController.index);\nroutes.get('/providers/:providerId/available', AvailableController.index);\n\nroutes.post('/appointments', AppointmentController.store);\nroutes.get('/appointments', AppointmentController.index);\nroutes.delete('/appointments/:id', AppointmentController.delete);\n\nroutes.get('/schedule', ScheduleController.index);\n\nroutes.get('/notifications', NotificationController.index);\nroutes.put('/notifications/:id', NotificationController.update);\n\nroutes.post('/files', upload.single('file'), FileController.store);\n\nexport default routes;\n"],"file":"routes.js"}