{"version":3,"sources":["../../../src/app/controllers/AppointmentController.js"],"names":["AppointmentController","index","req","res","page","query","appointments","Appointment","findAll","where","user_id","userId","canceled_at","order","limit","offset","attributes","include","model","User","as","File","json","store","schema","Yup","object","shape","provider_id","number","required","date","isValid","body","status","error","checkIsProvider","findOne","id","provider","hourStart","Date","checkAvailabitity","appointment","create","user","findByPk","formattedDate","locale","pt","Notification","content","name","delete","params","dateWithSub","NOW","save","Queue","add","CancellationMail","key"],"mappings":"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","sourcesContent":["import * as Yup from 'yup';\nimport { startOfHour, parseISO, isBefore, format, subHours } from 'date-fns';\nimport pt from 'date-fns/locale/pt';\nimport Appointment from '../models/Appointment';\nimport User from '../models/User';\nimport File from '../models/File';\nimport Notification from '../schemas/Notification';\nimport CancellationMail from '../jobs/CancellationMail';\nimport Queue from '../../lib/Queue';\n\nclass AppointmentController {\n  async index(req, res) {\n    const { page = 1 } = req.query;\n\n    const appointments = await Appointment.findAll({\n      where: {\n        user_id: req.userId,\n        canceled_at: null,\n      },\n      order: ['date'],\n      limit: 20,\n      offset: (page - 1) * 20,\n      attributes: ['id', 'date', 'past', 'cancelable'],\n      include: [\n        {\n          model: User,\n          as: 'provider',\n          attributes: ['id', 'name'],\n          include: [\n            {\n              model: File,\n              as: 'avatar',\n              attributes: ['id', 'path', 'url'],\n            },\n          ],\n        },\n      ],\n    });\n    return res.json(appointments);\n  }\n\n  async store(req, res) {\n    const schema = Yup.object().shape({\n      provider_id: Yup.number().required(),\n      date: Yup.date().required(),\n    });\n\n    if (!(await schema.isValid(req.body))) {\n      return res.status(400).json({\n        error: 'Valiation fails',\n      });\n    }\n\n    const { provider_id, date } = req.body;\n\n    /**\n     * Provider can't create appointment for itself\n     */\n    if (provider_id === req.userId) {\n      return res\n        .status(401)\n        .json({ error: 'You can not create appointments for yourself' });\n    }\n\n    /**\n     * Check if provider_id is a provider\n     */\n    const checkIsProvider = await User.findOne({\n      where: {\n        id: provider_id,\n        provider: true,\n      },\n    });\n\n    if (!checkIsProvider) {\n      return res\n        .status(401)\n        .json({ error: 'You can only create appointments with providers' });\n    }\n\n    const hourStart = startOfHour(parseISO(date));\n\n    /**\n     * Check for past dates\n     */\n    if (isBefore(hourStart, new Date())) {\n      return res.status(400).json({ error: 'Past date are not permitted' });\n    }\n\n    /**\n     * Check date availabity\n     */\n    const checkAvailabitity = await Appointment.findOne({\n      where: {\n        provider_id,\n        canceled_at: null,\n        date: hourStart,\n      },\n    });\n\n    if (checkAvailabitity) {\n      return res\n        .status(400)\n        .json({ error: 'Appointment date is not available' });\n    }\n\n    const appointment = await Appointment.create({\n      user_id: req.userId,\n      provider_id,\n      date,\n    });\n\n    /**\n     * Notify appointment provider\n     */\n    const user = await User.findByPk(req.userId);\n    const formattedDate = format(\n      hourStart,\n      \"'dia' dd 'de' MMMM', Ã s' H:mm'h'\",\n      {\n        locale: pt,\n      }\n    );\n    await Notification.create({\n      content: `Novo agendamento de ${user.name} para o ${formattedDate}`,\n      user: provider_id,\n    });\n\n    return res.json(appointment);\n  }\n\n  async delete(req, res) {\n    const appointment = await Appointment.findByPk(req.params.id, {\n      include: [\n        {\n          model: User,\n          as: 'provider',\n          attributes: ['name', 'email'],\n        },\n        {\n          model: User,\n          as: 'user',\n          attributes: ['name'],\n        },\n      ],\n    });\n\n    if (appointment.user_id !== req.userId) {\n      return res.status(401).json({\n        error: \"You don't have permission to cancel this appointment.\",\n      });\n    }\n\n    // removo duas horas da data agendada\n    const dateWithSub = subHours(appointment.date, 2);\n    const NOW = new Date();\n    if (isBefore(dateWithSub, NOW)) {\n      return res.status(401).json({\n        error: 'You can only cancel appointment 2 hours in advance.',\n      });\n    }\n\n    appointment.canceled_at = NOW;\n\n    await appointment.save();\n\n    await Queue.add(CancellationMail.key, { appointment });\n\n    return res.json(appointment);\n  }\n}\n\nexport default new AppointmentController();\n"],"file":"AppointmentController.js"}