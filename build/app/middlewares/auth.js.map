{"version":3,"sources":["../../../src/app/middlewares/auth.js"],"names":["req","res","next","authHeader","headers","authorization","status","json","error","token","split","decoded","jwt","verify","authConfig","secret","userId","id"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;eAEe,OAAOA,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB,KAA0B;AACvC,QAAMC,UAAU,GAAGH,GAAG,CAACI,OAAJ,CAAYC,aAA/B;;AAEA,MAAI,CAACF,UAAL,EAAiB;AACf,WAAOF,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAArB,CAAP;AACD;;AAED,QAAM,GAAGC,KAAH,IAAYN,UAAU,CAACO,KAAX,CAAiB,GAAjB,CAAlB;;AAEA,MAAI;AACF,UAAMC,OAAO,GAAG,MAAM,qBAAUC,sBAAIC,MAAd,EAAsBJ,KAAtB,EAA6BK,cAAWC,MAAxC,CAAtB;AAEAf,IAAAA,GAAG,CAACgB,MAAJ,GAAaL,OAAO,CAACM,EAArB;AACA,WAAOf,IAAI,EAAX;AACD,GALD,CAKE,OAAOM,KAAP,EAAc;AACd,WAAOP,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAArB,CAAP;AACD;AACF,C","sourcesContent":["import jwt from 'jsonwebtoken';\nimport { promisify } from 'util';\nimport authConfig from '../../config/auth';\n\nexport default async (req, res, next) => {\n  const authHeader = req.headers.authorization;\n\n  if (!authHeader) {\n    return res.status(401).json({ error: 'Token not provided' });\n  }\n\n  const [, token] = authHeader.split(' ');\n\n  try {\n    const decoded = await promisify(jwt.verify)(token, authConfig.secret);\n\n    req.userId = decoded.id;\n    return next();\n  } catch (error) {\n    return res.status(401).json({ error: 'Token invalid' });\n  }\n};\n"],"file":"auth.js"}