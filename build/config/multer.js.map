{"version":3,"sources":["../../src/config/multer.js"],"names":["storage","multer","diskStorage","destination","__dirname","filename","req","file","cb","crypto","randomBytes","err","res","toString","originalname"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;eAEe;AACbA,EAAAA,OAAO,EAAEC,gBAAOC,WAAP,CAAmB;AAC1BC,IAAAA,WAAW,EAAE,mBAAQC,SAAR,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,KAA/B,EAAsC,SAAtC,CADa;AAE1BC,IAAAA,QAAQ,EAAE,CAACC,GAAD,EAAMC,IAAN,EAAYC,EAAZ,KAAmB;AAC3BC,sBAAOC,WAAP,CAAmB,EAAnB,EAAuB,CAACC,GAAD,EAAMC,GAAN,KAAc;AACnC,YAAID,GAAJ,EAAS,OAAOH,EAAE,CAACG,GAAD,CAAT;AACT,eAAOH,EAAE,CAAC,IAAD,EAAOI,GAAG,CAACC,QAAJ,CAAa,KAAb,IAAsB,mBAAQN,IAAI,CAACO,YAAb,CAA7B,CAAT;AACD,OAHD;AAID;AAPyB,GAAnB;AADI,C","sourcesContent":["import multer from 'multer';\nimport crypto from 'crypto';\nimport { extname, resolve } from 'path';\n\nexport default {\n  storage: multer.diskStorage({\n    destination: resolve(__dirname, '..', '..', 'tmp', 'uploads'),\n    filename: (req, file, cb) => {\n      crypto.randomBytes(16, (err, res) => {\n        if (err) return cb(err);\n        return cb(null, res.toString('hex') + extname(file.originalname));\n      });\n    },\n  }),\n};\n"],"file":"multer.js"}